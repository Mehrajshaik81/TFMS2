@model TFMS.Models.DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
}

<h1>Welcome to Your TFMS Dashboard!</h1>
<hr />

@* Include Bootstrap Icons CDN here for self-containment in this view.
   Ideally, this would be in your Views/Shared/_Layout.cshtml if used globally. *@
@section Scripts {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
}

@* --- Admin/Operator Dashboard Section --- *@
@if (User.IsInRole("Fleet Administrator") || User.IsInRole("Fleet Operator"))
{
    <h2>Fleet Overview</h2>
    <div class="row">
        <div class="col-md-4 mb-3">
            <div class="card text-center bg-primary text-white">
                <div class="card-body">
                    <h5 class="card-title"><i class="bi bi-truck-flatbed me-2"></i>Total Vehicles</h5>
                    <p class="card-text fs-2">@Model.TotalVehicles</p>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-3">
            <div class="card text-center bg-info text-white">
                @* Changed color for Total Trips card *@
                <div class="card-body">
                    <h5 class="card-title"><i class="bi bi-signpost-split-fill me-2"></i>Total Trips</h5> @* Changed title and icon *@
                    <p class="card-text fs-2">@Model.TotalTrips</p> @* Using new TotalTrips property *@
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-3">
            <div class="card text-center bg-warning text-dark">
                <div class="card-body">
                    <h5 class="card-title"><i class="bi bi-tools me-2"></i>In Maintenance</h5>
                    <p class="card-text fs-2">@Model.InMaintenanceVehicles</p>
                </div>
            </div>
        </div>
    </div>

    @* Removed the old second row of trip-specific cards as they are now consolidated into "Total Trips" above *@

    <div class="row mt-4">
        <div class="col-md-6 mb-3">
            <div class="card">
                <div class="card-header bg-danger text-white">
                    <h5 class="card-title mb-0"><i class="bi bi-exclamation-triangle-fill me-2"></i>Overdue Maintenance</h5>
                </div>
                <div class="card-body">
                    <p class="card-text fs-2 text-center">@Model.OverdueMaintenanceCount</p>
                    @if (Model.OverdueMaintenanceCount > 0)
                    {
                        <p class="text-center"><a href="@Url.Action("Index", "MaintenanceRecords", new { statusFilter = "Overdue" })" class="btn btn-sm btn-outline-danger">View Details</a></p>
                    }
                </div>
            </div>
        </div>
        <div class="col-md-6 mb-3">
            <div class="card">
                <div class="card-header bg-success text-white">
                    <h5 class="card-title mb-0"><i class="bi bi-fuel-pump-fill me-2"></i>Total Fuel Cost (Last 30 Days)</h5>
                </div>
                <div class="card-body">
                    <p class="card-text fs-2 text-center">@Model.TotalFuelCostLast30Days.ToString("C")</p> @* Format as Currency *@
                    <p class="text-center"><a href="@Url.Action("Index", "FuelRecords", new { startDate = DateTime.Today.AddDays(-30).ToString("yyyy-MM-dd"), endDate = DateTime.Today.ToString("yyyy-MM-dd") })" class="btn btn-sm btn-outline-success">View Details</a></p>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-6 mb-4">
            <h3><i class="bi bi-calendar-event me-2"></i>Upcoming Trips</h3>
            @if (Model.UpcomingTrips != null && Model.UpcomingTrips.Any())
            {
                <ul class="list-group">
                    @foreach (var trip in Model.UpcomingTrips)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>
                                <strong>@trip.StartLocation to @trip.EndLocation</strong> for @trip.Vehicle?.RegistrationNumber
                                <br />
                                <small>@trip.ScheduledStartTime?.ToString("MMM dd,yyyy HH:mm")</small>
                            </span>
                            <a href="@Url.Action("Details", "Trips", new { id = trip.TripId })" class="btn btn-sm btn-info text-white">View</a>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No upcoming trips scheduled in the next 7 days.</p>
            }
        </div>
        <div class="col-md-6 mb-4">
            <h3><i class="bi bi-clipboard-pulse me-2"></i>Upcoming Maintenance</h3>
            @if (Model.UpcomingMaintenance != null && Model.UpcomingMaintenance.Any())
            {
                <ul class="list-group">
                    @foreach (var maintenance in Model.UpcomingMaintenance)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>
                                <strong>@maintenance.Description</strong> for @maintenance.Vehicle?.RegistrationNumber
                                <br />
                                <small>Scheduled: @maintenance.ScheduledDate?.ToString("MMM dd,yyyy") (@maintenance.Status)</small>
                            </span>
                            <a href="@Url.Action("Details", "MaintenanceRecords", new { id = maintenance.MaintenanceId })" class="btn btn-sm btn-info text-white">View</a>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No upcoming maintenance scheduled in the next 30 days.</p>
            }
        </div>
    </div>
}

@* --- Driver Dashboard Section --- *@
@if (User.IsInRole("Driver"))
{
    <h2><i class="bi bi-person-fill me-2"></i>Your Trips Today</h2>
    @if (Model.DriverAssignedTripsToday != null && Model.DriverAssignedTripsToday.Any())
    {
        <ul class="list-group mb-4">
            @foreach (var trip in Model.DriverAssignedTripsToday)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <span>
                        <strong>@trip.StartLocation to @trip.EndLocation</strong> on @trip.Vehicle?.RegistrationNumber
                        <br />
                        <small>Status: @trip.Status | Scheduled: @trip.ScheduledStartTime?.ToString("HH:mm")</small>
                    </span>
                    <a href="@Url.Action("UpdateStatus", "Trips", new { id = trip.TripId })" class="btn btn-sm btn-primary">Update Status</a>
                </li>
            }
        </ul>
    }
    else
    {
        <p>No trips assigned for today.</p>
    }

    <div class="row mt-4">
        <div class="col-md-6 mb-4">
            <h3><i class="bi bi-gas-pump-fill me-2"></i>Your Last Fuel Record</h3>
            @if (Model.DriverLastFuelRecord != null)
            {
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@Model.DriverLastFuelRecord.Date?.ToString("MMM dd,yyyy")</h5>
                        <p class="card-text">
                            <strong>Vehicle:</strong> @Model.DriverLastFuelRecord.Vehicle?.RegistrationNumber<br />
                            <strong>Location:</strong> @Model.DriverLastFuelRecord.Location<br />
                            <strong>Quantity:</strong> @Model.DriverLastFuelRecord.FuelQuantity L<br />
                            <strong>Cost:</strong> @Model.DriverLastFuelRecord.Cost?.ToString("C")
                        </p>
                        <a href="@Url.Action("Details", "FuelRecords", new { id = Model.DriverLastFuelRecord.FuelId })" class="btn btn-sm btn-info text-white">View Details</a>
                    </div>
                </div>
            }
            else
            {
                <p>No recent fuel records found for you.</p>
            }
        </div>
        <div class="col-md-6 mb-4">
            <h3><i class="bi bi-wrench-adjustable-fill me-2"></i>Next Maintenance for Your Vehicle</h3>
            @if (Model.DriverNextMaintenanceForAssignedVehicle != null)
            {
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@Model.DriverNextMaintenanceForAssignedVehicle.Description</h5>
                        <p class="card-text">
                            <strong>Vehicle:</strong> @Model.DriverNextMaintenanceForAssignedVehicle.Vehicle?.RegistrationNumber<br />
                            <strong>Scheduled:</strong> @Model.DriverNextMaintenanceForAssignedVehicle.ScheduledDate?.ToString("MMM dd,yyyy")<br />
                            <strong>Type:</strong> @Model.DriverNextMaintenanceForAssignedVehicle.MaintenanceType<br />
                            <strong>Status:</strong> @Model.DriverNextMaintenanceForAssignedVehicle.Status
                        </p>
                        <a href="@Url.Action("Details", "MaintenanceRecords", new { id = Model.DriverNextMaintenanceForAssignedVehicle.MaintenanceId })" class="btn btn-sm btn-info text-white">View Details</a>
                    </div>
                </div>
            }
            else
            {
                <p>No upcoming maintenance scheduled for your assigned vehicles.</p>
            }
        </div>
    </div>
}
