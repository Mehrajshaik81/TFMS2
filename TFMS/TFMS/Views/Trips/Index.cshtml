@model IEnumerable<TFMS.Models.Trip>

@{
    ViewData["Title"] = "Trips";
}

<h1>Trips</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New Trip</a>
</p>

@* --- Search and Filter Section --- *@
<form asp-controller="Trips" asp-action="Index" method="get" class="mb-4">
    <div class="row g-3 align-items-end">
        <div class="col-md-3">
            <label for="SearchString" class="form-label">Search (Location/Route)</label>
            <input type="text" name="searchString" id="SearchString" class="form-control" value="@ViewBag.CurrentSearchString" />
        </div>
        <div class="col-md-2">
            <label for="StatusFilter" class="form-label">Filter by Status</label>
            <select name="statusFilter" id="StatusFilter" class="form-select" asp-items="ViewBag.StatusFilter">
                @* No default option needed as "All" is in ViewBag *@
            </select>
        </div>
        <div class="col-md-3">
            <label for="DriverFilter" class="form-label">Filter by Driver</label>
            <select name="driverIdFilter" id="DriverFilter" class="form-select" asp-items="ViewBag.DriverFilter">
                @* No default option needed as "All Drivers" is in ViewBag *@
            </select>
        </div>
        <div class="col-md-2">
            <label for="VehicleFilter" class="form-label">Filter by Vehicle</label>
            <select name="vehicleIdFilter" id="VehicleFilter" class="form-select" asp-items="ViewBag.VehicleFilter">
                @* No default option needed as "All Vehicles" is in ViewBag *@
            </select>
        </div>
        <div class="col-md-2 d-flex justify-content-end">
            <button type="submit" class="btn btn-outline-secondary">Apply Filters</button>
            <a asp-action="Index" class="btn btn-outline-danger ms-2">Clear Filters</a>
        </div>
    </div>
</form>
@* --- End Search and Filter Section --- *@

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Vehicle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Driver)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartLocation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndLocation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ScheduledStartTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ScheduledEndTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EstimatedDistanceKm)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ActualStartTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ActualEndTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ActualDistanceKm)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Vehicle!.RegistrationNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Driver!.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartLocation)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndLocation)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ScheduledStartTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ScheduledEndTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EstimatedDistanceKm)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ActualStartTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ActualEndTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ActualDistanceKm)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.TripId">Details</a> 
                    @if (User.IsInRole("Fleet Administrator") || User.IsInRole("Fleet Operator"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.TripId">Edit</a> 
                    }
                    @if (User.IsInRole("Fleet Administrator") || User.IsInRole("Fleet Operator") || (User.IsInRole("Driver") && item.DriverId == User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value))
                    {
                        <a asp-action="UpdateStatus" asp-route-id="@item.TripId">Update Status</a> 
                    }
                    @if (User.IsInRole("Fleet Administrator"))
                    {
                        <a asp-action="Delete" asp-route-id="@item.TripId">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>